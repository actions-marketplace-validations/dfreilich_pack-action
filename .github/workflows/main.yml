name: test

on: [push, pull_request]

env:
  TEST_APP_PATH: ".github/workflows/test-app"
  BUILDER: "paketobuildpacks/builder:tiny"

jobs:
  help:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pack Help
        uses: ./
        with:
          args: 'help'
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pack Version
        uses: ./
        with:
          args: 'version'
  local_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Action
        uses: actions/checkout@v2
      - name: Pack Build
        uses: ./
        with:
          args: 'build test_img --builder ${{ env.BUILDER }} --path ${{ env.TEST_APP_PATH }}'
      - name: Test App
        run: |
          docker run -d -p 8080:8080 --name testapp test_img
          curl localhost:8080
      - name: Pack Rebase
        uses: ./
        with:
          args: 'rebase test_img'
      - name: Inspect Image
        uses: ./
        with:
          args: 'inspect-image test_img'
      - name: Clean Up
        run: |
          docker container stop testapp
  dockerhub_remote_build:
    runs-on: ubuntu-latest
    env:
      USERNAME: 'dfreilich'
      IMG_NAME: 'pack_action_test_img'
    steps:
      - name: Checkout Action
        uses: actions/checkout@v2
      - name: Set App Name
        run: 'echo "::set-env name=IMG_NAME::$(echo ${USERNAME})/$(echo ${IMG_NAME})"'
      - name: Pack Remote Build
        uses: ./
        with:
          args: 'build ${{ env.IMG_NAME }} --builder ${{ env.BUILDER }} --path ${{ env.TEST_APP_PATH }} --publish'
          username: ${{ env.USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Test App
        run: |
          docker run -d -p 8080:8080 --name testapp ${{ env.IMG_NAME }}
          curl localhost:8080
      - name: Pack Rebase
        uses: ./
        with:
          args: 'rebase ${{ env.IMG_NAME }}'
      - name: Inspect Image
        uses: ./
        with:
          args: 'inspect-image ${{ env.IMG_NAME }}'
      - name: Clean Up
        run: |
          docker container stop testapp
